@model MomCom.Models.Profile

@{
	Layout = null;
	//Layout = "../Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<link href="~/Content/momcom.css" rel="stylesheet" />
	<title>Create</title>
</head>
<body>
	@Scripts.Render("~/bundles/jquery")
	@Scripts.Render("~/bundles/jqueryval")
	<div class="image1">
		<div class="ptext">
			<span class="border">
				MomCom
			</span>
		</div>
	</div>
	<section class="section section-light">
		<h2>A Fun Community for Moms to Meet Moms for Playdates</h2>
		<p>
			Shared value families shared value grit venture philanthropy low-hanging fruit. Movements change-makers dynamic challenges and opportunities. Blended value low-hanging fruit, humanitarian when scale and impact justice. Entrepreneur B-corp; expose the truth when technology capacity building benefit corporation change-makers shared unit of analysis. Communities resilient invest effective altruism green space.Inclusive, dynamic greenwashing; ecosystem synergy social entrepreneurship. Scalable changemaker activate, shared unit of analysis, thought leadership empathetic scalable we must stand up co-create. Agile agile thought provoking, granular design thinking then scale and impact deep dive citizen-centered. Corporate social responsibility social capital effective our work co-create inclusion problem-solvers. Data optimism living a fully ethical life shine social entrepreneurship collective impact innovation. Impact investing, social entrepreneur do-gooder ecosystem capacity building. Benefit corporation capacity building incubator white paper social intrapreneurship incubator state of play black lives matter. Academic, strategize; technology, movements cultivate; empower communities, strategy revolutionary. Granular empower communities families improve the.
		</p>
	</section>

	<div class="image2">
		<div class="ptext">
			<span class="border">
				
			</span>
		</div>
	</div>
	<section class="section section-light">
		<h2>Create Your Profile and Connect!</h2>
	</section>
	
	
	@using (Html.BeginForm()) 
	{
		@Html.AntiForgeryToken()
		
		<div class="form-horizontal">
			<h4>Profile</h4>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
				</div>
			</div>
	
			<div class="form-group">
				@Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
				</div>
			</div>
	
			<div class="form-group">
				<!-- TODO: Make a dropdown with all the valid options... -->
				@Html.LabelFor(model => model.AgeRange, htmlAttributes: new {@class = "control-label col-md-2"})
				<div class="col-md-10">
					@Html.EditorFor(model => model.AgeRange, new {htmlAttributes = new {@class = "form-control"}})
					@Html.ValidationMessageFor(model => model.AgeRange, "", new {@class = "text-danger"})
				</div>
			</div>
	
			<div class="form-group">
				@Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
				</div>
			</div>
	
			<div class="form-group">
				@Html.LabelFor(model => model.Park, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.Park)
						@Html.ValidationMessageFor(model => model.Park, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>
	
			<div class="form-group">
				@Html.LabelFor(model => model.Playground, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.Playground)
						@Html.ValidationMessageFor(model => model.Playground, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>
	
			<div class="form-group">
				@Html.LabelFor(model => model.Pool, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.Pool)
						@Html.ValidationMessageFor(model => model.Pool, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>
	
			<div class="form-group">
				@Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
				</div>
			</div>
	
			<div class="form-group">
				@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
				</div>
			</div>
	
			<div class="form-group">
				@Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
				</div>
			</div>
	
			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Create" class="btn btn-default" />
				</div>
			</div>
		</div>
	}
	
	<div>
		@Html.ActionLink("Back to List", "Index")
	</div>
</body>
</html>
